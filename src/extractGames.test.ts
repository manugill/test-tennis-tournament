import {
  assertEquals,
} from "https://deno.land/std/testing/asserts.ts";
import extractGames from "./extractGames.ts";

Deno.test("should convert valid match to games", async () => {
  const games = extractGames({
    players: ["One", "Two"],
    scores: [
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      0,
      0,
      0,
      0,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
      1,
    ],
  });
  assertEquals(games, [
    {
      winner: "One",
      gameScore: [4, 0],
      scoreLog: [
        { score: 0, player1: 1, player2: 0, winner: undefined },
        { score: 0, player1: 2, player2: 0, winner: undefined },
        { score: 0, player1: 3, player2: 0, winner: undefined },
        { score: 0, player1: 4, player2: 0, winner: "One" },
      ],
    },
    {
      winner: "One",
      gameScore: [4, 0],
      scoreLog: [
        { score: 0, player1: 1, player2: 0, winner: undefined },
        { score: 0, player1: 2, player2: 0, winner: undefined },
        { score: 0, player1: 3, player2: 0, winner: undefined },
        { score: 0, player1: 4, player2: 0, winner: "One" },
      ],
    },
    {
      winner: "One",
      gameScore: [4, 0],
      scoreLog: [
        { score: 0, player1: 1, player2: 0, winner: undefined },
        { score: 0, player1: 2, player2: 0, winner: undefined },
        { score: 0, player1: 3, player2: 0, winner: undefined },
        { score: 0, player1: 4, player2: 0, winner: "One" },
      ],
    },
    {
      winner: "One",
      gameScore: [4, 0],
      scoreLog: [
        { score: 0, player1: 1, player2: 0, winner: undefined },
        { score: 0, player1: 2, player2: 0, winner: undefined },
        { score: 0, player1: 3, player2: 0, winner: undefined },
        { score: 0, player1: 4, player2: 0, winner: "One" },
      ],
    },
    {
      winner: "One",
      gameScore: [4, 0],
      scoreLog: [
        { score: 0, player1: 1, player2: 0, winner: undefined },
        { score: 0, player1: 2, player2: 0, winner: undefined },
        { score: 0, player1: 3, player2: 0, winner: undefined },
        { score: 0, player1: 4, player2: 0, winner: "One" },
      ],
    },
    {
      winner: "Two",
      gameScore: [0, 4],
      scoreLog: [
        { score: 1, player1: 0, player2: 1, winner: undefined },
        { score: 1, player1: 0, player2: 2, winner: undefined },
        { score: 1, player1: 0, player2: 3, winner: undefined },
        { score: 1, player1: 0, player2: 4, winner: "Two" },
      ],
    },
    {
      winner: "Two",
      gameScore: [0, 4],
      scoreLog: [
        { score: 1, player1: 0, player2: 1, winner: undefined },
        { score: 1, player1: 0, player2: 2, winner: undefined },
        { score: 1, player1: 0, player2: 3, winner: undefined },
        { score: 1, player1: 0, player2: 4, winner: "Two" },
      ],
    },
    {
      winner: "Two",
      gameScore: [0, 4],
      scoreLog: [
        { score: 1, player1: 0, player2: 1, winner: undefined },
        { score: 1, player1: 0, player2: 2, winner: undefined },
        { score: 1, player1: 0, player2: 3, winner: undefined },
        { score: 1, player1: 0, player2: 4, winner: "Two" },
      ],
    },
    {
      winner: "Two",
      gameScore: [0, 4],
      scoreLog: [
        { score: 1, player1: 0, player2: 1, winner: undefined },
        { score: 1, player1: 0, player2: 2, winner: undefined },
        { score: 1, player1: 0, player2: 3, winner: undefined },
        { score: 1, player1: 0, player2: 4, winner: "Two" },
      ],
    },
    {
      winner: "Two",
      gameScore: [0, 4],
      scoreLog: [
        { score: 1, player1: 0, player2: 1, winner: undefined },
        { score: 1, player1: 0, player2: 2, winner: undefined },
        { score: 1, player1: 0, player2: 3, winner: undefined },
        { score: 1, player1: 0, player2: 4, winner: "Two" },
      ],
    },
    {
      winner: "One",
      gameScore: [4, 0],
      scoreLog: [
        { score: 0, player1: 1, player2: 0, winner: undefined },
        { score: 0, player1: 2, player2: 0, winner: undefined },
        { score: 0, player1: 3, player2: 0, winner: undefined },
        { score: 0, player1: 4, player2: 0, winner: "One" },
      ],
    },
    {
      winner: "Two",
      gameScore: [0, 4],
      scoreLog: [
        { score: 1, player1: 0, player2: 1, winner: undefined },
        { score: 1, player1: 0, player2: 2, winner: undefined },
        { score: 1, player1: 0, player2: 3, winner: undefined },
        { score: 1, player1: 0, player2: 4, winner: "Two" },
      ],
    },
    {
      winner: "Two",
      gameScore: [0, 4],
      scoreLog: [
        { score: 1, player1: 0, player2: 1, winner: undefined },
        { score: 1, player1: 0, player2: 2, winner: undefined },
        { score: 1, player1: 0, player2: 3, winner: undefined },
        { score: 1, player1: 0, player2: 4, winner: "Two" },
      ],
    },
    {
      winner: "Two",
      gameScore: [0, 4],
      scoreLog: [
        { score: 1, player1: 0, player2: 1, winner: undefined },
        { score: 1, player1: 0, player2: 2, winner: undefined },
        { score: 1, player1: 0, player2: 3, winner: undefined },
        { score: 1, player1: 0, player2: 4, winner: "Two" },
      ],
    },
    {
      winner: "Two",
      gameScore: [0, 4],
      scoreLog: [
        { score: 1, player1: 0, player2: 1, winner: undefined },
        { score: 1, player1: 0, player2: 2, winner: undefined },
        { score: 1, player1: 0, player2: 3, winner: undefined },
        { score: 1, player1: 0, player2: 4, winner: "Two" },
      ],
    },
    {
      winner: "Two",
      gameScore: [0, 4],
      scoreLog: [
        { score: 1, player1: 0, player2: 1, winner: undefined },
        { score: 1, player1: 0, player2: 2, winner: undefined },
        { score: 1, player1: 0, player2: 3, winner: undefined },
        { score: 1, player1: 0, player2: 4, winner: "Two" },
      ],
    },
    {
      winner: "Two",
      gameScore: [0, 4],
      scoreLog: [
        { score: 1, player1: 0, player2: 1, winner: undefined },
        { score: 1, player1: 0, player2: 2, winner: undefined },
        { score: 1, player1: 0, player2: 3, winner: undefined },
        { score: 1, player1: 0, player2: 4, winner: "Two" },
      ],
    },
    {
      winner: "One",
      gameScore: [4, 0],
      scoreLog: [
        { score: 0, player1: 1, player2: 0, winner: undefined },
        { score: 0, player1: 2, player2: 0, winner: undefined },
        { score: 0, player1: 3, player2: 0, winner: undefined },
        { score: 0, player1: 4, player2: 0, winner: "One" },
      ],
    },
    {
      winner: "One",
      gameScore: [4, 0],
      scoreLog: [
        { score: 0, player1: 1, player2: 0, winner: undefined },
        { score: 0, player1: 2, player2: 0, winner: undefined },
        { score: 0, player1: 3, player2: 0, winner: undefined },
        { score: 0, player1: 4, player2: 0, winner: "One" },
      ],
    },
    {
      winner: "One",
      gameScore: [4, 0],
      scoreLog: [
        { score: 0, player1: 1, player2: 0, winner: undefined },
        { score: 0, player1: 2, player2: 0, winner: undefined },
        { score: 0, player1: 3, player2: 0, winner: undefined },
        { score: 0, player1: 4, player2: 0, winner: "One" },
      ],
    },
    {
      winner: "One",
      gameScore: [4, 0],
      scoreLog: [
        { score: 0, player1: 1, player2: 0, winner: undefined },
        { score: 0, player1: 2, player2: 0, winner: undefined },
        { score: 0, player1: 3, player2: 0, winner: undefined },
        { score: 0, player1: 4, player2: 0, winner: "One" },
      ],
    },
    {
      winner: "One",
      gameScore: [4, 0],
      scoreLog: [
        { score: 0, player1: 1, player2: 0, winner: undefined },
        { score: 0, player1: 2, player2: 0, winner: undefined },
        { score: 0, player1: 3, player2: 0, winner: undefined },
        { score: 0, player1: 4, player2: 0, winner: "One" },
      ],
    },
    {
      winner: "Two",
      gameScore: [0, 4],
      scoreLog: [
        { score: 1, player1: 0, player2: 1, winner: undefined },
        { score: 1, player1: 0, player2: 2, winner: undefined },
        { score: 1, player1: 0, player2: 3, winner: undefined },
        { score: 1, player1: 0, player2: 4, winner: "Two" },
      ],
    },
    {
      winner: "Two",
      gameScore: [0, 4],
      scoreLog: [
        { score: 1, player1: 0, player2: 1, winner: undefined },
        { score: 1, player1: 0, player2: 2, winner: undefined },
        { score: 1, player1: 0, player2: 3, winner: undefined },
        { score: 1, player1: 0, player2: 4, winner: "Two" },
      ],
    },
    {
      winner: "Two",
      gameScore: [0, 4],
      scoreLog: [
        { score: 1, player1: 0, player2: 1, winner: undefined },
        { score: 1, player1: 0, player2: 2, winner: undefined },
        { score: 1, player1: 0, player2: 3, winner: undefined },
        { score: 1, player1: 0, player2: 4, winner: "Two" },
      ],
    },
    {
      winner: "Two",
      gameScore: [0, 4],
      scoreLog: [
        { score: 1, player1: 0, player2: 1, winner: undefined },
        { score: 1, player1: 0, player2: 2, winner: undefined },
        { score: 1, player1: 0, player2: 3, winner: undefined },
        { score: 1, player1: 0, player2: 4, winner: "Two" },
      ],
    },
    {
      winner: "Two",
      gameScore: [0, 4],
      scoreLog: [
        { score: 1, player1: 0, player2: 1, winner: undefined },
        { score: 1, player1: 0, player2: 2, winner: undefined },
        { score: 1, player1: 0, player2: 3, winner: undefined },
        { score: 1, player1: 0, player2: 4, winner: "Two" },
      ],
    },
    {
      winner: "Two",
      gameScore: [0, 4],
      scoreLog: [
        { score: 1, player1: 0, player2: 1, winner: undefined },
        { score: 1, player1: 0, player2: 2, winner: undefined },
        { score: 1, player1: 0, player2: 3, winner: undefined },
        { score: 1, player1: 0, player2: 4, winner: "Two" },
      ],
    },
  ]);
});

Deno.test("should convert match with no scores to empty games", async () => {
  const matches = extractGames({
    players: ["One", "Two"],
    scores: [],
  });
  assertEquals(matches, []);
});
